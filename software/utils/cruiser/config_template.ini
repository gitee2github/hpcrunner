[INITIAL]
# The root directory of the source code. By default, the program running directory is selected as the source code root directory
dir_root = 
# The log file name output by the arm platform
log_arm = 
# The log file name output by the x86 platform
log_x86 = 

[LOGGER]
# The log directory
dir_log = 
# The log mode currently supports: ALL, STANDARD, FILE, CSV.
# standard: Redirect log data to standard output
# FILE: Redirect the log data to the log file
# CSV: Redirect the log data to the csv file
# Using all will apply all output modes
mode = ALL

[HOOK]
# Hook mode. The hook mode currently supports: MAIN, LOG, and log mode is used by default
# MAIN: Hook from the main function to all variables in the sub-function called by the lower level
# LOG: Hook different variables according to the logs generated by different platforms
mode = LOG
# The process granularity of program log printing. Now supports: ALL, MASTER, SINGLE
# ALL: For multi-process programs, print the output of all processes
# MASTER: For multi-process programs, only the output of the main process (process 0) is printed
# SINGLE: For single-process programs
granularity = MASTER
# The number of levels of downward recursive hooking sub-functions takes effect when HOOK.mode is main
level = 3
# The number of cutting for too long parameters during hook.
split = 5
# The regular expression of analyzing flag data in the log
format_flag = {}-{}-call {}-{}-{}
# Specify the main function entry of the program, which only takes effect when 'mode' is set to MAIN
# format: (directory1, class.function), (directory2, function), ...
# NOTE: No space characters in the path!!!
