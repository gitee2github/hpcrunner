[SERVER]
11.11.11.11

[DOWNLOAD]

[DEPENDENCY]
set -e
set -x
module purge
./jarvis -install gcc/9.3.0 com
module use ./software/modulefiles
module load gcc/9.3.0
export CC=`which gcc`
export CXX=`which g++`
export FC=`which gfortran`
./jarvis -install hmpi/1.1.1 gcc
module load hmpi/1.1.1
./jarvis -install zlib/1.2.12 gcc
module load zlib/1.2.12
./jarvis -install openblas/0.3.18 gcc
module load openblas/0.3.18
./jarvis -install cmake/3.23.1 gcc
module load cmake/3.23.1
sed -i '10,12d ' package/lapack/3.8.0/install.sh
sed -i '$a mkdir build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX=$1 -DBUILD_SHARED_LIBS=ON -DCMAKE_BUILD_TYPE=RELEASE -DCMAKE_INSTALL_LIBDIR=$1 && make -j && make install -j ' package/lapack/3.8.0/install.sh
./jarvis -install lapack/3.8.0 gcc
module load lapack/3.8.0
sed -i '14,18d' package/scalapack/2.1.0/install.sh
sed -i '$a mkdir build && cd build && cmake -DCMAKE_INSTALL_PREFIX=$1 -DBUILD_SHARED_LIBS=ON -DCMAKE_C_COMPILER=mpicc -DCMAKE_Fortran_COMPILER=mpif90 .. && make -j && make install' package/scalapack/2.1.0/install.sh
./jarvis -install scalapack/2.1.0 gcc

[ENV]
module purge
module use ${JARVIS_ROOT}/software/modulefiles
module load gcc/9.3.0
module load hmpi/1.1.1 scalapack/2.1.0 lapack/3.8.0
module load openblas/0.3.18 zlib/1.2.12
export LAPACK_PATH=${JARVIS_LIBS}/gcc9.3.0/lapack/3.8.0/
export SCALPACK_PATH=${JARVIS_LIBS}/gcc9.3.0/scalapack/2.1.0
export MPI_PATH=${JARVIS_MPI}/hmpi1.1.1-gcc9.3.0/1.1.1
export OPENBLAS_PATH=${JARVIS_LIBS}/gcc9.3.0/openblas/0.3.18/
export CC=mpicc CXX=mpicxx FC=mpifort F77=mpifort

[APP]
app_name = mumps
build_dir = ${JARVIS_TMP}/MUMPS_5.1.2
binary_dir = 
case_dir = ${JARVIS_TMP}/MUMPS_5.1.2/examples

[BUILD]
cd ${JARVIS_ROOT} && ./jarvis -install mumps/5.1.2 gcc+mpi

[RUN]
run = export OMPI_ALLOW_RUN_AS_ROOT=1 OMPI_ALLOW_RUN_AS_ROOT_CONFIRM=1 && make clean all && export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${JARVIS_LIBS}/gcc9.3.0/hmpi1.1.1/mumps/5.1.2/ && mpirun -np 3 --mca plm_rsh_agent sh --mca opal_warn_on_missing_libcuda 0 --oversubscribe
binary = ./ssimpletest < input_simpletest_real && ./dsimpletest < input_simpletest_real && ./csimpletest < input_simpletest_cmplx && ./zsimpletest < input_simpletest_cmplx && ./c_example && ./multiple_arithmetics_example
nodes = 1