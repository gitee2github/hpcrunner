[SERVER]
11.11.11.11

[DOWNLOAD]
hpl/2.3 https://netlib.org/benchmark/hpl/hpl-2.3.tar.gz

[DEPENDENCY]
module purge
module use ./software/modulefiles
./jarvis -install bisheng/2.5.0 com
module load bisheng/2.5.0
export CC=`which clang`
export CXX=`which clang++`
export FC=`which flang`
./jarvis -install kml/1.6.0/gcc any
./jarvis -install hmpi/1.2.0 clang
if [ ! -d "hpl-2.3" ]; then
   tar -xzvf $JARVIS_DOWNLOAD/hpl-2.3.tar.gz
fi

[ENV]
source ./init.sh
module purge
module use ./software/modulefiles
module load bisheng/2.5.0
module load hmpi/1.2.0
module load kml-gcc/1.6.0
export LD_LIBRARY_PATH=${KML_GCC_PATH}/lib/kblas/omp:$LD_LIBRARY_PATH
export HPL_HOME=$JARVIS_ROOT/hpl-2.3

[APP]
app_name = hpl
build_dir = $HPL_HOME
binary_dir = $HPL_HOME/bin/aarch64
case_dir = $HPL_HOME/bin/aarch64

[BUILD]
cat << \EOF >  Make.aarch64
SHELL        = /bin/sh
CD           = cd
CP           = cp
LN_S         = ln -s
MKDIR        = mkdir
RM           = /bin/rm -f
TOUCH        = touch
ARCH         = aarch64
TOPdir       = $(HPL_HOME)
INCdir       = $(TOPdir)/include
BINdir       = $(TOPdir)/bin/$(ARCH)
LIBdir       = $(TOPdir)/lib/$(ARCH)
HPLlib       = $(LIBdir)/libhpl.a 
LAdir        = $(KML_GCC_PATH)
LAinc        =
LAlib        = $(LAdir)/lib/kblas/omp/libkblas.so
F2CDEFS      = -DAdd__ -DF77_INTEGER=int -DStringSunStyle
HPL_INCLUDES = -I$(INCdir) -I$(INCdir)/$(ARCH) $(LAinc) $(MPinc)
HPL_LIBS     = $(HPLlib) $(LAlib) $(MPlib)
HPL_OPTS     = -DHPL_DETAILED_TIMING -DHPL_PROGRESS_REPORT
HPL_DEFS     = $(F2CDEFS) $(HPL_OPTS) $(HPL_INCLUDES)
CC           = mpicc
CCNOOPT      = $(HPL_DEFS)
CCFLAGS      = $(HPL_DEFS) -fomit-frame-pointer -O3 -fopenmp -funroll-loops -W -Wall
LINKER       = $(CC)
LINKFLAGS    = $(CCFLAGS)
ARCHIVER     = ar
ARFLAGS      = r
RANLIB       = echo
EOF
make arch=aarch64 -j
if [ ! -e ./bin/aarch64/xhpl ]; then
   echo "Build failed"
   exit 1
fi
echo "check if SVE exists"
objdump -d bin/aarch64/xhpl | grep z0
cd bin/aarch64
#rm -rf hpl.*
#modify HPL.dat
cat << \EOF >  HPL.dat
HPLinpack benchmark input file
Innovative Computing Laboratory, University of Tennessee
HPL.out      output file name (if any)
6            device out (6=stdout,7=stderr,file)
1            # of problems sizes (N)
100000       Ns
1            # of NBs
256          NBs
1            PMAP process mapping (0=Row-,1=Column-major)
1            # of process grids (P x Q)
20           Ps
20           Qs
16.0         threshold
1            # of panel fact
2 1 0        PFACTs (0=left, 1=Crout, 2=Right)
1            # of recursive stopping criterium
2            NBMINs (>= 1)
1            # of panels in recursion
2            NDIVs
1            # of recursive panel fact.
1 0 2        RFACTs (0=left, 1=Crout, 2=Right)
1            # of broadcast
1            BCASTs (0=1rg,1=1rM,2=2rg,3=2rM,4=Lng,5=LnM)
1            # of lookahead depth
0            DEPTHs (>=0)
0            SWAP (0=bin-exch,1=long,2=mix)
1            swapping threshold
1            L1 in (0=transposed,1=no-transposed) form
1            U  in (0=transposed,1=no-transposed) form
0            Equilibration (0=no,1=yes)
8            memory alignment in double (> 0)
EOF

[CLEAN]
make arch=aarch64 clean
rm -rf bin/aarch64

[RUN]
run = mpirun --allow-run-as-root -np 32
binary = xhpl
nodes = 1

[JOB]
#!/bin/sh
#DSUB -n hpl_test
#DSUB --job_type cosched:hmpi
#DSUB -A root.default
#DSUB -q root.default
#DSUB -N 25
#DSUB -R cpu=128
#DSUB -oo hpl.%J.out
#DSUB -eo hpl.%J.err
echo "mpi hostfile generated."
echo "-----------------------"
cat ${CCS_HOST_FILE}
echo "-----------------------"
date
EXEC_CMD="mpirun $CCS_MPI_OPTIONS --map-by ppr:16:node:pe=8 -x OMP_NUM_THREADS=8 -np 400 ./xhpl"
#EXEC_CMD="mpirun $CCS_MPI_OPTIONS -x OMP_NUM_THREADS=1 -np 3200 ./xhpl"
$EXEC_CMD
date
