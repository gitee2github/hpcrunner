[SERVER]
11.11.11.11

[DOWNLOAD]
hucx/1.1.1 https://github.com/kunpengcompute/hucx/archive/refs/tags/v1.1.1-huawei.tar.gz hucx-1.1.1-huawei.tar.gz
xucg/1.1.1 https://github.com/kunpengcompute/xucg/archive/refs/tags/v1.1.1-huawei.tar.gz xucg-1.1.1-huawei.tar.gz
hmpi/1.1.1 https://github.com/kunpengcompute/hmpi/archive/refs/tags/v1.1.1-huawei.tar.gz hmpi-1.1.1-huawei.tar.gz
bisheng/2.1.0 https://mirrors.huaweicloud.com/kunpeng/archive/compiler/bisheng_compiler/bisheng-compiler-2.1.0-aarch64-linux.tar.gz

[DEPENDENCY]
module use ./software/modulefiles
module purge
./jarvis -install bisheng/2.1.0 com
module load bisheng2/2.1.0
export CC=clang CXX=clang++ FC=flang
./jarvis -install hmpi/1.1.1 clang

[ENV]
module use ./software/modulefiles
module purge
module load bisheng2/2.1.0
module load hmpi1/1.1.1
export CC=mpicc CXX=mpicxx FC=mpifort

[APP]
app_name = Amber
build_dir = $JARVIS_ROOT/amber20_src

binary_dir = $JARVIS_ROOT/software/apps/amber20
case_dir = $JARVIS_ROOT/software/apps/amber20/AmberTools/benchmarks/nab

[BUILD]
#yum install cmake* flex* bison* boost* python2-pip -y

mpi_path=`which mpicc`
mpi_path=${mpi_path%/*}

content='CFLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -Wl,-z,muldefs -fuse-ld=lld" \\\ \
CXXFLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -Wno-c++11-narrowing -Wl,-z,muldefs -fuse-ld=lld" \
FCFLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -I$mpi_path/include -L$mpi_path/lib -fuse-ld=lld" \
cmake $AMBER_PREFIX/amber20_src \
 -DCMAKE_INSTALL_PREFIX=$AMBER_PREFIX/amber20 \
 -DCOMPILER=CLANG  \
 -DMPI=TRUE -DCUDA=FALSE -DINSTALL_TESTS=TRUE \
 -DDOWNLOAD_MINICONDA=FALSE -DMINICONDA_USE_PY3=FLASE \
 -DCMAKE_VERBOSE_MAKEFILE=ON \
 -DCMAKE_C_FLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -Wl,-z,muldefs -fuse-ld=lld" \
  -DCMAKE_CXX_FLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -Wno-c++11-narrowing -Wl,-z,muldefs -fuse-ld=lld" \
  -DCMAKE_Fortran_FLAGS="-O3 -mllvm -force-customized-pipeline -march=armv8.2-a -mcpu=tsv110 -I$mpi_path/include -L$mpi_path/lib -fuse-ld=lld" \
   2>&1 | tee  cmake.log'
echo $content


#./run_cmake
#make -j 96 install

[CLEAN]
./clean_build

[RUN]
run = mpirun -mca btl ^vader,tcp,openib,uct -np 2
binary = pmemd.cuda_SPFP.MPI -O -i mdinOPT.GPU -o mdout -p Cellulose.prmtop -c Cellulose.inpcrd && cat mdout
nodes = 1
